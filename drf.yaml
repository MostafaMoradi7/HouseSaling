openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/:
    get:
      operationId: api_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/House'
          description: ''
    post:
      operationId: api_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/House'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/House'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/House'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/House'
          description: ''
  /api/{id}/:
    get:
      operationId: api_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this house model.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/House'
          description: ''
    put:
      operationId: api_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this house model.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/House'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/House'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/House'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/House'
          description: ''
    patch:
      operationId: api_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this house model.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHouse'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/House'
          description: ''
    delete:
      operationId: api_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this house model.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /user/token/:
    post:
      operationId: user_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /user/token/refresh/:
    post:
      operationId: user_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    House:
      type: object
      properties:
        area:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        floor:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        city:
          type: string
          maxLength: 150
        price:
          type: number
          format: double
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - area
      - city
      - floor
      - price
      - status
    PatchedHouse:
      type: object
      properties:
        area:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        floor:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        city:
          type: string
          maxLength: 150
        price:
          type: number
          format: double
        status:
          $ref: '#/components/schemas/StatusEnum'
    StatusEnum:
      enum:
      - FREE
      - BAUGHT
      type: string
      description: |-
        * `FREE` - FREE
        * `BAUGHT` - BAUGHT
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
